// Copyright (c) 2024 Alaska Airlines. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

/* stylelint-disable selector-class-pattern, order/properties-order, no-descending-specificity */

@use "@aurodesignsystem/design-tokens/dist/legacy/auro-classic/SCSSVariables" as vac;
@use "@aurodesignsystem/design-tokens/dist/themes/alaska/SCSSVariables--alaska" as v;

:host(:not([checked])) {
  .cbxContainer {
    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-isfalse-hover, #{v.$ds-advanced-color-boolean-isfalse-hover});
    }
  }
}

:host {
  .label {
    color: var(--ds-auro-checkbox-label-color);
  }

  .inputContainer {
    &:after {
      background-color: var(--ds-auro-checkbox-container-color);
      border-color: var(--ds-auro-checkbox-border-color);
      outline-color: var(--ds-auro-checkbox-outline-color);
    }

    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-isfalse-hover, #{v.$ds-advanced-color-boolean-isfalse-hover});
    }
  }

  .svg--cbx {
    color: var(--ds-auro-checkbox-checkmark-color);
  }
  
}

:host(:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
  --ds-auro-checkbox-outline-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
}

:host([checked]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-istrue, #{$ds-advanced-color-boolean-istrue});
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-istrue, #{$ds-advanced-color-boolean-istrue});
}

:host([checked]:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-istrue-hover, #{v.$ds-advanced-color-boolean-istrue-hover});
    }
  }
}

:host([disabled]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-background-disabled, #{v.$ds-advanced-color-state-background-disabled});
  --ds-auro-checkbox-label-color: var(--ds-basic-color-texticon-disabled, #{v.$ds-basic-color-texticon-disabled});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-background-disabled, #{v.$ds-advanced-color-state-background-disabled});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-isfalse, #{v.$ds-advanced-color-boolean-isfalse});
    }
  }
}

:host([disabled][checked]) {
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-state-background-disabled, #{v.$ds-advanced-color-state-background-disabled});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-state-background-disabled, #{v.$ds-advanced-color-state-background-disabled});
    }
  }
}

:host([error]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error, #{v.$ds-advanced-color-boolean-error});
}

:host([error]:not([checked]):focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
  --ds-auro-checkbox-outline-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
}

:host([error][checked]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error, #{v.$ds-advanced-color-boolean-error});
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error, #{v.$ds-advanced-color-boolean-error});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error-hover, #{v.$ds-advanced-color-boolean-error-hover});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error-hover, #{v.$ds-advanced-color-boolean-error-hover});
    }
  }
}

:host([error][checked]:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error-hover, #{v.$ds-advanced-color-boolean-error-hover});
    }
  }
}

/* onDark Styles */

:host([onDark]) {
  --ds-auro-checkbox-label-color: var(--ds-basic-color-texticon-inverse, #{v.$ds-basic-color-texticon-inverse});
  --ds-auro-checkbox-border-color: var(--ds-basic-color-border-inverse, #{v.$ds-basic-color-border-inverse});
  --ds-auro-checkbox-container-color: transparent;

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-isfalse-inverse-hover, #{v.$ds-advanced-color-boolean-isfalse-inverse-hover});
    }
  }
}

:host([onDark]:not([checked])) {
  .inputContainer {
    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-isfalse-inverse-hover, #{v.$ds-advanced-color-boolean-isfalse-inverse-hover});
    }
  }
}

:host([onDark]:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
  --ds-auro-checkbox-outline-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
}

:host([onDark][checked]) {
  --ds-auro-checkbox-checkmark-color: var(--ds-advanced-color-boolean-indicator-inverse, #{v.$ds-advanced-color-boolean-indicator-inverse});
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-istrue-inverse, #{v.$ds-advanced-color-boolean-istrue-inverse});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: transparent;
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-istrue-inverse-hover, #{v.$ds-advanced-color-boolean-istrue-inverse-hover});
    }
  }
}

:host([onDark][checked]:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-istrue-inverse-hover, #{v.$ds-advanced-color-boolean-istrue-inverse-hover});
    }
  }
}

:host([onDark][disabled]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-background-inverse-disabled, #{v.$ds-advanced-color-state-background-inverse-disabled});
  --ds-auro-checkbox-label-color: var(--ds-basic-color-texticon-inverse-disabled, #{v.$ds-basic-color-texticon-inverse-disabled});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-background-inverse-disabled, #{v.$ds-advanced-color-state-background-inverse-disabled});
      --ds-auro-checkbox-container-color: transparent;
    }
  }
}

:host([onDark][disabled][checked]) {
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-state-background-inverse-disabled, #{v.$ds-advanced-color-state-background-inverse-disabled});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-state-background-inverse-disabled, #{v.$ds-advanced-color-state-background-inverse-disabled});
    }
  }
}

:host([onDark][error]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error-inverse, #{v.$ds-advanced-color-boolean-error-inverse});
}

:host([onDark][error]:not([checked]):focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
  --ds-auro-checkbox-outline-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
}

:host([onDark][error][checked]) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error-inverse, #{v.$ds-advanced-color-boolean-error-inverse});
  --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error-inverse, #{v.$ds-advanced-color-boolean-error-inverse});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-boolean-error-inverse-hover, #{v.$ds-advanced-color-boolean-error-inverse-hover});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error-inverse-hover, #{v.$ds-advanced-color-boolean-error-inverse-hover});
    }
  }
}

:host([onDark][error][checked]:focus-within) {
  --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});

  .inputContainer {
    &:hover {
      --ds-auro-checkbox-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
      --ds-auro-checkbox-container-color: var(--ds-advanced-color-boolean-error-inverse-hover, #{v.$ds-advanced-color-boolean-error-inverse-hover});
    }
  }
}

