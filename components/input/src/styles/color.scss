// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// Support for fallback values
@import "@aurodesignsystem/design-tokens/dist/alaska/SCSSVariables--alaska";
@import "@aurodesignsystem/design-tokens/dist/auro-classic/SCSSVariables";

@import 'mixins';

/* stylelint-disable no-descending-specificity, selector-class-pattern */

.wrapper {
  border-color: transparent;
}

input {
  background-color: transparent;
  caret-color: var(--ds-auro-input-caret-color);
  color: var(--ds-auro-input-text-color);

  &::placeholder {
    color: transparent;
  }

  &:focus {
    &::placeholder {
      color: var(--ds-auro-input-placeholder-text-color);
    }
  }

  &:disabled {
    --ds-auro-input-text-color: var(--ds-basic-color-texticon-disabled, #{$ds-basic-color-texticon-disabled});
  }
}

label {
  color: var(--ds-auro-input-label-text-color);
}

:host(:not([bordered], [borderless])) {
  .wrapper {
    border-bottom-color: var(--ds-auro-input-border-color);
  }
}

:host([bordered]) {
  .wrapper {
    border-color: var(--ds-auro-input-border-color);
    background-color: var(--ds-auro-input-container-color);

    &:focus-within {
      --ds-auro-input-border-color: var(--ds-advanced-color-state-focused, #{$ds-advanced-color-state-focused});

      box-shadow: inset 0 0 0 1px var(--ds-auro-input-border-color);
    }
  }
}

:host([validity]:not([validity='valid'])[bordered]) {
  .wrapper {
    --ds-auro-input-border-color: var(--ds-basic-color-status-error, #{$ds-basic-color-status-error});

    box-shadow: inset 0 0 0 1px var(--ds-auro-input-border-color);
  }
}

:host([disabled]) {
  --ds-auro-input-border-color: var(--ds-basic-color-border-subtle, #{$ds-basic-color-border-subtle});
  --ds-auro-input-label-text-color: var(--ds-basic-color-texticon-disabled, #{$ds-basic-color-texticon-disabled});
}
