// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// Support for fallback values

@use "@aurodesignsystem/design-tokens/dist/themes/alaska/SCSSVariables--alaska" as v;
@use "@aurodesignsystem/design-tokens/dist/legacy/auro-classic/SCSSVariables" as vac;

/* stylelint-disable
  no-descending-specificity,
  declaration-empty-line-before,
  selector-max-pseudo-class,
  max-nesting-depth,
  selector-max-attribute,
  scss/selector-nest-combinators
*/

:host([layout*='classic']:not([onDark])) {
  .label {
    color: var(--ds-auro-dropdown-label-text-color);
  }

  .trigger {
    border-color: var(--ds-auro-dropdown-trigger-border-color);
    background-color: var(--ds-auro-dropdown-trigger-container-color);
    color: var(--ds-auro-dropdown-trigger-text-color);

    &:focus-within,
    &:active {
      --ds-auro-dropdown-trigger-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
      --ds-auro-dropdown-trigger-outline-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
    }
  }
}

/* Disabled state */
:host([layout*='classic'][disabled]:not([onDark])) {
  --ds-auro-dropdown-trigger-text-color: var(--ds-basic-color-texticon-disabled, #{v.$ds-basic-color-texticon-disabled});
  --ds-auro-dropdown-label-text-color: var(--ds-basic-color-texticon-disabled, #{v.$ds-basic-color-texticon-disabled});
  --ds-auro-dropdown-trigger-border-color: var(--ds-basic-color-border-subtle, #{v.$ds-basic-color-border-subtle});
}

/* Error state */
:host([layout*='classic'][error]:not([onDark])) {
  --ds-auro-dropdown-trigger-border-color: var(--ds-basic-color-status-error, #{v.$ds-basic-color-status-error});

  .trigger {
    &:focus-within,
    &:active {
      --ds-auro-dropdown-trigger-border-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
      --ds-auro-dropdown-trigger-outline-color: var(--ds-advanced-color-state-focused, #{v.$ds-advanced-color-state-focused});
    }
  }
}

/* onDark */
:host([layout*='classic'][onDark]) {
  .label {
    color: var(--ds-auro-dropdown-label-text-color);
  }

  .trigger {
    border-color: var(--ds-auro-dropdown-trigger-border-color);
    background-color: var(--ds-auro-dropdown-trigger-container-color);
    color: var(--ds-auro-dropdown-trigger-text-color);

    &:focus-within,
    &:active {
      --ds-auro-dropdown-trigger-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
      --ds-auro-dropdown-trigger-outline-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
    }
  }
}

/* onDark + disabled */
:host([layout*='classic'][onDark][disabled]) {
  --ds-auro-dropdown-trigger-text-color: var(--ds-basic-color-texticon-inverse-disabled, #{v.$ds-basic-color-texticon-inverse-disabled});
  --ds-auro-dropdown-label-text-color: var(--ds-basic-color-texticon-inverse-disabled, #{v.$ds-basic-color-texticon-inverse-disabled});
  --ds-auro-dropdown-trigger-container-color: var(--ds-advanced-color-shared-background-inverse-disabled, #{v.$ds-advanced-color-shared-background-inverse-disabled});
}

/* onDark + error */
:host([layout*='classic'][onDark][error]) {
  --ds-auro-dropdown-trigger-border-color: var(--ds-advanced-color-state-error-inverse, #{v.$ds-advanced-color-state-error-inverse});

  .trigger {
    &:focus-within,
    &:active {
      --ds-auro-dropdown-trigger-border-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
      --ds-auro-dropdown-trigger-outline-color: var(--ds-advanced-color-state-focused-inverse, #{v.$ds-advanced-color-state-focused-inverse});
    }
  }
}
